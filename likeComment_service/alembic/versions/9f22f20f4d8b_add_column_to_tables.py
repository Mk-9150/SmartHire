"""add column to tables

Revision ID: 9f22f20f4d8b
Revises: a8b320f67520
Create Date: 2024-10-14 14:20:17.434902

"""
from typing import Sequence, Union

import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9f22f20f4d8b'
down_revision: Union[str, None] = 'a8b320f67520'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test')
    op.add_column('comment', sa.Column('comment_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('like', sa.Column('like_status', sa.Boolean(), nullable=False))
    op.add_column('like', sa.Column('likedBy', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.drop_column('like', 'comment_status')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('like', sa.Column('comment_status', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_column('like', 'likedBy')
    op.drop_column('like', 'like_status')
    op.drop_column('comment', 'comment_by')
    op.create_table('test',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='test_pkey')
    )
    # ### end Alembic commands ###
